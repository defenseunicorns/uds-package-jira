# Copyright 2025 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: batch/v1
kind: Job
metadata:
  name: jira-setup
  labels:
    app.kubernetes.io/name: jira
spec:
  backoffLimit: {{ .Values.setup.job.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.setup.job.activeDeadlineSeconds }}
  ttlSecondsAfterFinished: {{ .Values.setup.job.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jira
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-jira
          image: {{ .Values.setup.job.image }}
          command: ['sh', '-c']
          args:
            - |
              sleep 10
              echo "Proceeding with setup..."
          env:
            - name: JIRA_DOMAIN
              value: jira.{{ .Values.domain }}
      containers:
        - name: setup
          image: {{ .Values.setup.job.image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command: ["/bin/bash", "-c"]
          args:
            - |
              set -ex
              dnf install -y --allowerasing python3 python3-pip curl
              
              # Create and activate virtual environment
              python3 -m venv /setup/venv
              source /setup/venv/bin/activate
              
              # Install packages in the virtual environment
              pip install --no-cache-dir requests beautifulsoup4
              
              # Make venv accessible to main container
              chmod -R 755 /setup/venv            
              source /setup/venv/bin/activate
              python3 /scripts/test_license.py
              
              echo "Waiting 10 seconds before updating base URL..."
              sleep 10
              echo "Updating base URL..."
              curl -vvvv -k -X PUT "https://${JIRA_DOMAIN}/rest/api/2/settings/baseUrl" \
                --user "${JIRA_ADMIN_USERNAME}:${JIRA_ADMIN_PASSWORD}" \
                -H "Content-Type: application/json" \
                -d "https://${JIRA_DOMAIN}"
          env:
            - name: JIRA_DOMAIN
              value: jira.{{ .Values.domain }}
            - name: JIRA_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: jira-admin
                  key: username
            - name: JIRA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jira-admin
                  key: password
            - name: JIRA_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: jira-admin
                  key: email
            - name: JIRA_ADMIN_FULLNAME
              valueFrom:
                secretKeyRef:
                  name: jira-admin
                  key: fullname
            - name: JIRA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jira.license.secretName }}
                  key: license_key
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          volumeMounts:
            - name: script
              mountPath: /scripts
              readOnly: true
            - name: setup
              mountPath: /setup
      volumes:
        - name: script
          configMap:
            name: jira-setup-script
            defaultMode: 0755
        - name: setup
          emptyDir: {}